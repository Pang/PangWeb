@using PangWeb.Pages.Shared.RegisterLoginComponents
@using PangWeb.Services

<nav class="navbar navbar-expand-lg navbar-light text-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">PangWeb</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav mb-2 mb-lg-0 justify-content-between w-100">
        <section class="d-flex">
            <!-- Home -->
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="#">Home</a>
            </li>
            <!-- Store -->
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Store
              </a>
              <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                @foreach (var category in _productService.getAllCategories())
                {
                    <li><a class="dropdown-item" href="/Store/@category.Category">@category.Category</a></li>
                }
              </ul>
            </li>
        </section>
        <section class="d-flex">
            @if (_userService.GetTokenProperty("name") == null)
            {
                <!-- Login/Register -->
                <li class="nav-item">
                    <a class="nav-link" aria-current="page" @onclick="() => loginDialogOpen = true">Login/Register</a>
                </li>
            }
            else
            {
                <span>@_userService.GetTokenProperty("email")</span>
            }
            @if (_userService.GetTokenProperty("role") == "1")
            {
                <!-- Admin -->
                <li class="nav-item">
                    <a class="nav-link" aria-current="page" href="/Admin">Admin</a>
                </li>
            }
        </section>
      </ul>
    </div>
  </div>
</nav>

<!-- Modals/Dialogs -->
@if (loginDialogOpen)
{
    <dialog open style="width: 500px; top: 25%; z-index: 1">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="login-tab" data-bs-toggle="tab" data-bs-target="#login" type="button" role="tab" aria-controls="login" aria-selected="true">Login</button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="register-tab" data-bs-toggle="tab" data-bs-target="#register" type="button" role="tab" aria-controls="register" aria-selected="false">Register</button>
          </li>
          <span style="margin-left: auto;" @onclick="() => loginDialogOpen = false">X</span>
        </ul>

        <div class="tab-content" id="myTabContent">
          <div class="tab-pane fade show active" id="login" role="tabpanel" aria-labelledby="login-tab">
            <LoginComponent OnLoggedIn="CloseRegisterDialog"></LoginComponent>
          </div>
          <div class="tab-pane fade" id="register" role="tabpanel" aria-labelledby="register-tab">
            <RegisterComponent></RegisterComponent>
          </div>
        </div>
    </dialog>
}


@code {
    [Inject]
    private ProductService _productService { get; set; }
    [Inject]
    private UserService _userService { get; set; }


    private bool loginDialogOpen; 

    private void CloseRegisterDialog()
    {
        loginDialogOpen = false;
        //StateHasChanged();
    }
}